from pydantic import BaseModel, Field
from typing import Dict, List, Any, Optional
from datetime import datetime
import uuid

def create_session_id():
    return str(uuid.uuid4())

class ContextMessage(BaseModel):
    role: str  # "user" | "assistant" | "system"
    content: str
    timestamp: datetime = Field(default_factory=datetime.now)
    metadata: Optional[Dict[str, Any]] = None

class UIState(BaseModel):
    variables: Dict[str, Any] = {}
    active_components: List[str] = []
    last_render_id: Optional[str] = None
    viewport: Dict[str, float] = {"width": 800, "height": 600}
    # Add other UI state relevant to the session

class VisualizationSpec(BaseModel):
    """Structured specification for a visualization generated by the LLM."""
    type: str  # e.g., "plotly", "manim", "interactive_js", "text_explanation"
    explanation: str # LLM's explanation text
    content: Dict[str, Any] = {} # Details specific to the type (e.g., {"data": ..., "layout": ...} for plotly, {"function_expr": ..., "parameters": ...} for interactive_js)

class LearningContext(BaseModel):
    session_id: str = Field(default_factory=create_session_id)
    messages: List[ContextMessage] = []
    ui_state: UIState = UIState()
    current_topic: Optional[str] = None
    learning_objectives: List[str] = []
    # Store the *specification* and the *output path*
    last_visualization_spec: Optional[VisualizationSpec] = None
    last_render_output: Optional[str] = None # Path to file (video) or identifier

    def add_message(self, role: str, content: str, metadata: Optional[Dict[str, Any]] = None):
        self.messages.append(ContextMessage(role=role, content=content, metadata=metadata))

    def update_ui_variables(self, variables: Dict[str, Any]):
        self.ui_state.variables.update(variables)

    def set_visualization(self, spec: VisualizationSpec, output: Optional[str] = None):
        self.last_visualization_spec = spec
        self.last_render_output = output
        self.ui_state.last_render_id = str(uuid.uuid4()) # Unique ID for this render